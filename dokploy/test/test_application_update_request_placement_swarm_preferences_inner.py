
"""Dokploy API

Endpoints for dokploy

The version of the OpenAPI document: v0.6.1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from openapi_client.models.application_update_request_placement_swarm_preferences_inner import (
    ApplicationUpdateRequestPlacementSwarmPreferencesInner,
)


class TestApplicationUpdateRequestPlacementSwarmPreferencesInner(unittest.TestCase):
    """ApplicationUpdateRequestPlacementSwarmPreferencesInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApplicationUpdateRequestPlacementSwarmPreferencesInner:
        """Test ApplicationUpdateRequestPlacementSwarmPreferencesInner
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included
        """
        # uncomment below to create an instance of `ApplicationUpdateRequestPlacementSwarmPreferencesInner`
        """
        model = ApplicationUpdateRequestPlacementSwarmPreferencesInner()
        if include_optional:
            return ApplicationUpdateRequestPlacementSwarmPreferencesInner(
                spread = openapi_client.models.application_update_request_placement_swarm_preferences_inner_spread.application_update_request_placementSwarm_Preferences_inner_Spread(
                    spread_descriptor = '', )
            )
        else:
            return ApplicationUpdateRequestPlacementSwarmPreferencesInner(
                spread = openapi_client.models.application_update_request_placement_swarm_preferences_inner_spread.application_update_request_placementSwarm_Preferences_inner_Spread(
                    spread_descriptor = '', ),
        )
        """

    def testApplicationUpdateRequestPlacementSwarmPreferencesInner(self):
        """Test ApplicationUpdateRequestPlacementSwarmPreferencesInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
